# 配置Sharding-JDBC的分片策略
# 配置数据源
spring.shardingsphere.datasource.names=ds0,ds1
#
# 配置允许后面的Bean覆盖前面名称重复的Bean
spring.main.allow-bean-definition-overriding=true
#
#### 数据源ds0配置
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/goods_db_0?characterEncoding=utf-8&useUnicode=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=tiger
#### 数据源ds1配置
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/goods_db_1?characterEncoding=utf-8&useUnicode=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=tiger
#
#### 分库策略
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#
### 分表策略
spring.shardingsphere.sharding.tables.goods.actual-data-nodes=ds$->{0..1}.goods_$->{0..1}
# 切分键
spring.shardingsphere.sharding.tables.goods.table-strategy.inline.sharding-column=gid
# 指定分片策略
spring.shardingsphere.sharding.tables.goods.table-strategy.inline.algorithm-expression=goods_$->{gid % 2}
# 指定goods表 主键gid 生成策略为 SNOWFLAKE(雪花ID)
spring.shardingsphere.sharding.tables.goods.key-generator.column=gid
spring.shardingsphere.sharding.tables.goods.key-generator.type=my_keygen
#
#
# 广播表, 其主节点是ds0
spring.shardingsphere.sharding.broadcast-tables=t_config
spring.shardingsphere.sharding.tables.t_config.actual-data-nodes=ds$->{0}.t_config
#
# 最大容忍的时钟回拨毫秒数
spring.shardingsphere.sharding.tables.goods.key-generator.max.tolerate.time.difference.milliseconds=5
#
# 打开sql输出日志
spring.shardingsphere.props.sql.show=true
